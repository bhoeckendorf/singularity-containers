user nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

error_log  stderr;
pid        /run/user/1019568/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # modified from ssl-config.mozilla.org
    # can't use :80 as regular user in container
    #server {
    #    listen 80 default_server;
    #    listen [::]:80 default_server;
    #
    #    auth_basic           "";
    #    auth_basic_user_file /etc/nginx/.htpasswd;
    #
    #    return 301 https://$host$request_uri;
    #}

    server {
        listen 4433 ssl http2;       # use 4433 instead of 443
        listen [::]:4433 ssl http2;

        auth_basic           "";
        auth_basic_user_file /etc/nginx/.htpasswd;

        ssl_certificate /etc/ssl/certs/bh-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/bh-selfsigned.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        # curl https://ssl-config.mozilla.org/ffdhe4096.txt > /path/to/dhparam
        ssl_dhparam /etc/ssl/dhparam.pem;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        #ssl_trusted_certificate /etc/ca-certificates # /path/to/root_CA_cert_plus_intermediates;

        # replace with the IP address of your resolver
        #resolver 127.0.0.1;

        include /etc/nginx/sites-enabled/*;
    }
}
