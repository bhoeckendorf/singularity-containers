bootstrap: localimage
from: bh_arch.sif

%runscript
    source /etc/profile.d/*
    conda activate
    python "$@"

%apprun python
    source /etc/profile.d/*
    conda activate
    python "$@"

%apprun ipython
    source /etc/profile.d/*
    conda activate
    ipython "$@"

%apprun jupyter
    source /etc/profile.d/*
    conda activate
    jupyter lab \
      --config=${CONDA_HOME}/etc/jupyter/jupyter_notebook_config.py \
      --notebook-dir=${MYDIR} \
      "$@"

%apprun code
    source /etc/profile.d/*
    # conda activate
    code-server \
      --config=${CODER_HOME}/etc/config.yaml \
      --disable-telemetry \
      ${MYDIR}

%apprun conda
    source /etc/profile.d/*
    conda activate
    conda "$@"

%apprun pip
    source /etc/profile.d/*
    conda activate
    ${CONDA_HOME}/bin/pip "$@"

%apprun tensorboard
    source /etc/profile.d/*
    conda activate
    tensorboard --logdir="$@"

%apprun pytorch_test_gpu
    source /etc/profile.d/*
    conda activate
    python -c "import torch
print(torch.cuda.is_available())"

%apprun tensorflow_test_gpu
    source /etc/profile.d/*
    conda activate
    python -c "import tensorflow as tf
print(tf.config.list_physical_devices('GPU'))"

%apprun tensorflow1_test_gpu
    source /etc/profile.d/*
    conda activate tensorflow1
    python -c "import tensorflow as tf
print(tf.test.is_gpu_available())"

%files
    software/l_ipp_2020.2.254.tgz     /root/
    config/gitignore                  /etc/gitignore
    config/gitconfig                  /etc/gitconfig
    config/nginx.conf                 /etc/nginx/
    config/condarc                    /etc/conda/condarc
    conda_envs/base.yml               /root/
    conda_envs/tensorflow1.yml        /root/
    config/jupyter_notebook_config.py /opt/conda/etc/jupyter/
    config/nginx_jupyter.conf         /opt/conda/etc/jupyter/
    config/preload_jupyter.py         /etc/dask/
    config/distributed.yml            /etc/dask/
    config/jobqueue.yml               /etc/dask/
    config/code-server_config.yml     /opt/code-server/etc/config.yaml
    config/nginx_code-server.conf     /opt/code-server/etc/
    secrets/htpasswd                  /etc/nginx/.htpasswd
    secrets/dhparam.pem               /etc/ssl/
    secrets/bh-selfsigned.key         /etc/ssl/private/
    secrets/bh-selfsigned.crt         /etc/ssl/certs/

%post
    export CBIDIR=/research/sharedresources/cbi
    export MYDIR=${CBIDIR}/common/burkhard
    export JAVA_HOME=/usr/lib/jvm/default
    export JRE_HOME=${JAVA_HOME}
    export CONDA_HOME=/opt/conda
    export CODER_HOME=/opt/code-server



    ########################
    #  OS package manager  #
    ########################

    pacman -Syu --noconfirm
    pacman -S --needed --noconfirm \
      base-devel gdb clang lld lldb openmp intel-tbb intel-mkl ccache cmake git git-lfs tk cpio \
      blas cblas openblas lapack lapacke eigen fftw hdf5 ffmpeg openimageio zlib sqlite \
      jdk11-openjdk jre11-openjdk-headless openjdk11-src openjdk11-doc kotlin maven gradle \
      cuda cudnn nccl nvtop opencl-nvidia magma arrayfire \
      rust rust-analyzer go julia npm yarn doxygen opencv vtk nginx-mainline gnuplot texlive-most biber vim \
      freetds cyrus-sasl-gssapi cyrus-sasl-ldap cyrus-sasl-sql gsasl lsb-release unixodbc

    mkdir -p /var/cache/pacman/pkg
    yes | pacman -Scc
    rm -rf /var/cache/pacman/pkg

    source /etc/profile.d/jre.sh

    # Intel IPP
    cd /root/
    tar -xzf l_ipp_2020.2.254.tgz
    cd l_ipp_2020.2.254/
    printf "\
ACCEPT_EULA=accept
CONTINUE_WITH_OPTIONAL_ERROR=yes
PSET_INSTALL_DIR=/opt/intel
CONTINUE_WITH_INSTALLDIR_OVERWRITE=yes
COMPONENTS=DEFAULTS
PSET_MODE=install
#CLUSTER_INSTALL_MACHINES_FILE=filepat
SIGNING_ENABLED=yes
ARCH_SELECTED=ALL
" > bh_silent.cfg
    ./install.sh -s bh_silent.cfg
    cd ..
    rm -rf l_ipp_2020.2.254.tgz l_ipp_2020.2.254/
    cd



    ########################
    #  SSL & nginx         #
    ########################

    # take DH params, certificate and passwork from secrets, don't generate or fetch
    #curl https://ssl-config.mozilla.org/ffdhe4096.txt > /etc/ssl/dhparam.pem
    #openssl dhparam -out /etc/ssl/dhparam.pem 4096

    #openssl req -x509 -nodes -sha256 -days 3650 -newkey rsa:4096 \
    #  -subj "/C=US/ST=Tennessee/L=Memphis/O=St Jude Children's Research Hospital/OU=Center for Bioimage Informatics/CN=/emailAddress=cbi@stjude.org" \
    #  -keyout /etc/ssl/private/bh-selfsigned.key -out /etc/ssl/certs/bh-selfsigned.crt

    #printf "${username}:`openssl passwd -apr1`\n" >> /etc/nginx/.htpasswd

    # file permissions not ideal, but needed to run in container without root
    mkdir -p /run/nginx /etc/nginx/sites-available /etc/nginx/sites-enabled
    chmod -R 644 \
      /etc/ssl/dhparam.pem /etc/ssl/certs/bh-selfsigned.crt /etc/ssl/private/bh-selfsigned.key \
      /etc/nginx/nginx.conf /etc/nginx/sites-available/ /etc/nginx/sites-enabled/
    chmod -R 777 /var/lib/nginx/ /var/log/nginx/ /run/nginx/



    ########################
    #  conda & Jupyter     #
    ########################

    curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    bash Miniconda3-latest-Linux-x86_64.sh -b -u -p ${CONDA_HOME}
    rm Miniconda3-latest-Linux-x86_64.sh
    ln -s ${CONDA_HOME}/etc/profile.d/conda.sh /etc/profile.d/conda.sh

    source /etc/profile.d/conda.sh

    # Setup conda envs parent, pkg cache, local conda channel
    # Safe to do if already setup. Disabled because MYDIR isn't mounted during build.
    # mkdir -p \
    #   ${MYDIR}/var/conda/channel/linux-64 \
    #   ${MYDIR}/var/conda/channel/noarch \
    #   ${MYDIR}/var/conda/envs \
    #   ${MYDIR}/var/conda/pkgs
    # conda index ${MYDIR}/var/conda/channel

    conda update --all

    conda activate base
    conda env update -f /root/base.yml
    ${CONDA_HOME}/bin/python -m pip install --no-cache-dir --no-deps cellpose

    ${CONDA_HOME}/bin/jupyter labextension install \
      @jupyter-widgets/jupyterlab-manager jupyter-matplotlib jupyterlab-datawidgets @pyviz/jupyterlab_pyviz itkwidgets bqplot @jupyter-voila/jupyterlab-preview  # k3d # @bokeh/jupyter_bokeh # jupyterlab-nvdashboard
      # jupyterlab_tensorboard @ryantam626/jupyterlab_code_formatter
    ${CONDA_HOME}/bin/jupyter serverextension enable --py \
      jupyter_http_over_ws # voila # jupyterlab_code_formatter
    ${CONDA_HOME}/bin/jupyter lab build
    conda deactivate

    chmod 644 ${CONDA_HOME}/etc/jupyter/jupyter_notebook_config.py ${CONDA_HOME}/etc/jupyter/nginx_jupyter.conf
    ln -s ${CONDA_HOME}/etc/jupyter/nginx_jupyter.conf /etc/nginx/sites-available/jupyter.conf
    #ln -s /etc/nginx/sites-available/jupyter.conf /etc/nginx/sites-enabled/

    conda env create -f /root/tensorflow1.yml

    # Enable conda channels, envs, pkgs. Initially disabled because paths aren't mounted during build.
    sed -i "s/  # -/  -/" /etc/conda/condarc

    rm -r \
      ${CONDA_HOME}/share/jupyter/kernels/xcpp11 \
      ${CONDA_HOME}/share/jupyter/kernels/xcpp14 \
      /root/base.yml \
      /root/tensorflow1.yml
    chmod -R 777 /etc/conda/condarc ${CONDA_HOME}/pkgs
    chmod -R 644 /etc/dask/



    ########################
    #  coder               #
    ########################

    curl -fsSL https://code-server.dev/install.sh | sh -s -- --method=standalone --prefix=${CODER_HOME}
    rm -rf /root/.config/code-server
    export PATH=${PATH}:${CODER_HOME}/bin

    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension ms-vscode.cpptools
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension llvm-vs-code-extensions.vscode-clangd
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension xaver.clang-format
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension ms-vscode.cmake-tools
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension redhat.java
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension vscjava.vscode-java-pack
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension mathiasfrohlich.kotlin
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension ms-python.python
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension ms-python.anaconda-extension-pack
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension rust-lang.rust
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension golang.go
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension donjayamanne.githistory
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension James-Yu.latex-workshop
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension dbankier.vscode-instant-markdown
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension yzane.markdown-pdf
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension redhat.vscode-xml
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension redhat.vscode-yaml
    code-server --config=${CODER_HOME}/etc/config.yaml --install-extension bungcip.better-toml

    chmod -R 777 ${CODER_HOME}
    ln -s ${CODER_HOME}/etc/nginx_code-server.conf /etc/nginx/sites-available/code-server.conf
    ln -s /etc/nginx/sites-available/code-server.conf /etc/nginx/sites-enabled/
    chmod -R 644 /etc/nginx/sites-*

%environment
    export CBIDIR=/research/sharedresources/cbi
    export MYDIR=${CBIDIR}/common/burkhard
    export JAVA_HOME=/usr/lib/jvm/default
    export JRE_HOME=${JAVA_HOME}
    export CONDA_HOME=/opt/conda
    export CODER_HOME=/opt/code-server
    source /etc/profile.d/*
    export JUPYTER_ALLOW_INSECURE_WRITES=true
    export HPC_DIR=/hpcf/lsf/lsf_prod/10.1/linux3.10-glibc2.17-x86_64/bin
    export PATH=${PATH}:/opt/cuda/bin:${CODER_HOME}/bin:${HPC_DIR}
    export CC=/usr/bin/clang
    export CXX=/usr/bin/clang++
